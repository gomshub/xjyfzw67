
Trigger a Shell Script on a Server via Bamboo by Calling a Rundeck Job at 7 AM

This guide will walk you through setting up Bamboo to trigger a Rundeck job that executes a shell script (file_monitor.sh) on a server at 7 AM.

Step 1: Prepare the Shell Script on the Target Server
	1.	Create the Shell Script (file_monitor.sh) on the target server:

#!/bin/bash

# Directory to monitor
MONITOR_DIR="/path/to/your/folder"

# File pattern to monitor
FILE_PATTERN="z*.txt"

# Log file location
LOG_FILE="/path/to/your/log_file.log"

# Duration to monitor (in seconds)
DURATION=60

echo "Monitoring started at $(date)" >> "$LOG_FILE"

while true; do
    CURRENT_HOUR=$(date +%H)

    if (( CURRENT_HOUR < 7 || CURRENT_HOUR >= 19 )); then
        echo "Exiting monitoring at $(date). Outside active hours (7 AM - 7 PM)." >> "$LOG_FILE"
        exit 0
    fi

    START_TIME=$(date "+%Y-%m-%d %H:%M:%S")
    sleep $DURATION
    END_TIME=$(date "+%Y-%m-%d %H:%M:%S")
    FILE_COUNT=$(find "$MONITOR_DIR" -maxdepth 1 -type f -name "$FILE_PATTERN" | wc -l)
    echo "$START_TIME to $END_TIME | Duration: ${DURATION}s | File Count: $FILE_COUNT" >> "$LOG_FILE"
done


	2.	Give the script execute permissions:

chmod +x /path/to/file_monitor.sh

Step 2: Set Up the Rundeck Job
	1.	Log in to Rundeck.
	2.	Create a New Job:
	•	Go to the “Jobs” section and click Create Job.
	•	Job Name: File Monitor Script
	•	Description: Runs the file monitoring script.
	3.	Add a Command Step:
	•	Select Command.
	•	Enter:

/path/to/file_monitor.sh


	4.	Execution Node:
	•	Choose the target server where the script should execute.
	5.	Save the Job.

Step 3: Get Rundeck API Token
	1.	Go to Profile Settings in Rundeck.
	2.	Generate an API Token and copy it for later use.

Step 4: Configure Bamboo to Trigger Rundeck Job at 7 AM

1. Create a New Bamboo Plan
	1.	Log in to Bamboo.
	2.	Create a new Plan called Trigger Rundeck Job.
	3.	Go to Triggers > Add Scheduled Trigger.
	4.	Set the schedule to Run at 7 AM Daily.

2. Add a Script Task to Call Rundeck API
	1.	Inside the plan, add a Script Task.
	2.	Add the following script:

#!/bin/bash

# Rundeck server details
RUNDECK_URL="http://<rundeck-server-url>:4440/api/42/job/<job-id>/run"
RUNDECK_TOKEN="<your-api-token>"

# Trigger the Rundeck job
RESPONSE=$(curl -X POST -H "X-Rundeck-Auth-Token: $RUNDECK_TOKEN" \
                 -H "Content-Type: application/json" \
                 "$RUNDECK_URL")

# Log the response
echo "$RESPONSE" >> /path/to/bamboo-rundeck-log.txt


	3.	Replace:
	•	<rundeck-server-url> with your Rundeck server’s URL.
	•	<job-id> with the Rundeck Job ID.
	•	<your-api-token> with the API token generated in Step 3.
	4.	Save the task.

Step 5: Verify and Test
	1.	Manually Run the Bamboo Plan to ensure it triggers the Rundeck job.
	2.	Check Rundeck Execution Logs to verify the script executed successfully.
	3.	Check the Log File on the server (/path/to/your/log_file.log) for monitoring results.

Step 6: (Optional) Stop the Job at 7 PM

To ensure the script stops at 7 PM, you can schedule another Rundeck job to kill the process:
	1.	Create a New Rundeck Job:
	•	Name: Stop File Monitor Script
	•	Command Step:

pkill -f file_monitor.sh


	•	Assign it to the same execution node.

	2.	Trigger this job from Bamboo at 7 PM using another scheduled Bamboo plan similar to Step 4.

Summary

✅ Shell script runs the file monitoring logic.
✅ Rundeck job executes the script on the server.
✅ Bamboo triggers Rundeck at 7 AM using an API call.
✅ Logs are stored for monitoring.
✅ Optionally stops at 7 PM via another Rundeck job.

This setup ensures fully automated monitoring with centralized control via Rundeck and Bamboo. Let me know if you need any refinements!


To include the job name (4th field in the cron schedule line) in the email subject, modify the script to extract it dynamically.

1. Updated Bamboo Script

#!/bin/bash

# Rundeck server details
RUNDECK_URL="http://<rundeck-server-url>:4440/api/42/job/<job-id>/run"
RUNDECK_TOKEN="<your-api-token>"

# Email details
EMAIL_TO="admin@example.com"
EMAIL_BODY_FILE="/tmp/bamboo_failure_email.txt"

# Cron schedule line (used in Bamboo)
CRON_SCHEDULE="0 7 * * * /path/to/bamboo-script.sh"

# Extract Job Name (4th field) from cron schedule
JOB_NAME=$(echo "$CRON_SCHEDULE" | awk '{print $4}')

# Email Subject with Job Name
EMAIL_SUBJECT="Bamboo Job Failure: $JOB_NAME"

# Run Rundeck Job
RESPONSE=$(curl -s -o /tmp/rundeck_response.txt -w "%{http_code}" -X POST \
          -H "X-Rundeck-Auth-Token: $RUNDECK_TOKEN" \
          -H "Content-Type: application/json" \
          "$RUNDECK_URL")

# Check if Rundeck trigger failed
if [[ "$RESPONSE" -ne 200 ]]; then
    echo "Subject: $EMAIL_SUBJECT" > $EMAIL_BODY_FILE
    echo "To: $EMAIL_TO" >> $EMAIL_BODY_FILE
    echo "" >> $EMAIL_BODY_FILE
    echo "Failed to trigger Rundeck job from Bamboo at $(date)." >> $EMAIL_BODY_FILE
    echo "" >> $EMAIL_BODY_FILE
    echo "Cron Trigger Schedule Line:" >> $EMAIL_BODY_FILE
    echo "$CRON_SCHEDULE" >> $EMAIL_BODY_FILE
    echo "" >> $EMAIL_BODY_FILE
    echo "Rundeck API Response Code: $RESPONSE" >> $EMAIL_BODY_FILE
    echo "Rundeck Response Output:" >> $EMAIL_BODY_FILE
    cat /tmp/rundeck_response.txt >> $EMAIL_BODY_FILE

    # Send email using sendmail or mailx
    cat $EMAIL_BODY_FILE | sendmail -t
fi

2. How It Works
	1.	Extracts the job name from the 4th field of the cron schedule using awk.
	2.	Uses the extracted job name in the email subject:

Subject: Bamboo Job Failure: *


	3.	If the Rundeck job fails, it sends an email with the cron schedule details.

3. Example Email Output

✅ If the cron job name is * (meaning all jobs):

Subject: Bamboo Job Failure: *
To: admin@example.com

Failed to trigger Rundeck job from Bamboo at Tue Feb 13 07:00:00 UTC 2025.

Cron Trigger Schedule Line:
0 7 * * * /path/to/bamboo-script.sh

Rundeck API Response Code: 500
Rundeck Response Output:
Internal Server Error

✅ If a specific job name is in the 4th field:

If the cron schedule line is:

0 7 * myjob /path/to/bamboo-script.sh

The subject will be:

Subject: Bamboo Job Failure: myjob

4. Test & Validate
	•	Modify RUNDECK_URL to an invalid one to simulate failure.
	•	Run the script manually:

/path/to/bamboo-script.sh


	•	Check your email for failure notification.

This ensures Bamboo sends an alert with the correct job name if the Rundeck job fails. 🚀 Let me know if you need refinements!