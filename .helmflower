Great! Below is the full Helm chart structure for your Flask + Celery + Redis + RabbitMQ + Flower service, with Ingress support (can be extended with TLS):

⸻

📁 flask-celery-chart/Chart.yaml

apiVersion: v2
name: flask-celery-chart
description: A Helm chart for Flask + Celery + Redis + RabbitMQ + Flower
version: 0.1.0
appVersion: "1.0"


⸻

📁 flask-celery-chart/values.yaml

flask:
  image: flask-app:latest
  service:
    type: ClusterIP
    port: 5000

celery:
  image: celery-worker:latest
  replicaCount: 1

flower:
  image: mher/flower
  service:
    port: 5555

redis:
  image: redis:alpine
  service:
    port: 6379

rabbitmq:
  image: rabbitmq:3-management
  service:
    port: 5672
    managementPort: 15672

ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
  hosts:
    - host: flask.local
      paths:
        - path: /
          pathType: Prefix
          serviceName: flask
    - host: flower.local
      paths:
        - path: /
          pathType: Prefix
          serviceName: flower
  tls: []


⸻

📁 templates/deployment-flask.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask
  template:
    metadata:
      labels:
        app: flask
    spec:
      containers:
        - name: flask
          image: {{ .Values.flask.image }}
          ports:
            - containerPort: 5000


⸻

📁 templates/deployment-celery.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery
spec:
  replicas: {{ .Values.celery.replicaCount }}
  selector:
    matchLabels:
      app: celery
  template:
    metadata:
      labels:
        app: celery
    spec:
      containers:
        - name: celery
          image: {{ .Values.celery.image }}
          command: ["celery", "-A", "app.tasks", "worker", "--loglevel=info"]


⸻

📁 templates/deployment-flower.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: flower
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flower
  template:
    metadata:
      labels:
        app: flower
    spec:
      containers:
        - name: flower
          image: {{ .Values.flower.image }}
          ports:
            - containerPort: 5555


⸻

📁 templates/deployment-redis.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: {{ .Values.redis.image }}
          ports:
            - containerPort: 6379


⸻

📁 templates/deployment-rabbitmq.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: {{ .Values.rabbitmq.image }}
          ports:
            - containerPort: 5672
            - containerPort: 15672


⸻

📁 templates/service-flask.yaml

apiVersion: v1
kind: Service
metadata:
  name: flask
spec:
  type: {{ .Values.flask.service.type }}
  selector:
    app: flask
  ports:
    - port: {{ .Values.flask.service.port }}
      targetPort: 5000


⸻

📁 templates/service-flower.yaml

apiVersion: v1
kind: Service
metadata:
  name: flower
spec:
  selector:
    app: flower
  ports:
    - port: {{ .Values.flower.service.port }}
      targetPort: 5555


⸻

📁 templates/service-redis.yaml

apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  selector:
    app: redis
  ports:
    - port: {{ .Values.redis.service.port }}
      targetPort: 6379


⸻

📁 templates/service-rabbitmq.yaml

apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
spec:
  selector:
    app: rabbitmq
  ports:
    - port: {{ .Values.rabbitmq.service.port }}
      targetPort: 5672
    - port: {{ .Values.rabbitmq.service.managementPort }}
      targetPort: 15672


⸻

📁 templates/ingress.yaml

{{- if .Values.ingress.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: flask-celery-ingress
  annotations:
    {{- toYaml .Values.ingress.annotations | nindent 4 }}
spec:
  ingressClassName: {{ .Values.ingress.className }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            pathType: {{ .pathType }}
            backend:
              service:
                name: {{ .serviceName }}
                port:
                  number: 80
          {{- end }}
    {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- toYaml .Values.ingress.tls | nindent 4 }}
  {{- end }}
{{- end }}


⸻

Once you paste this structure into a local folder and run:

helm install flask-celery ./flask-celery-chart

You will deploy the full stack!

⸻

Would you also like:
	•	A Dockerfile and Python app for Flask + Celery example?
	•	A GitHub Actions CI/CD pipeline for this chart?

Let me know — I’ll help you build that next!