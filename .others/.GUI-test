For GUI testing of a Smart Client application, having access to the binaries or JAR files of the application alone may not be sufficient. Here's why:

1. **Smart Client Binaries**:
   - Binaries of a Smart Client application typically contain the executable files needed to run the application. While you can use these files to launch the application, GUI testing usually requires interacting with the user interface elements programmatically.
   - GUI testing tools need to interact with the application's UI elements, which may not be directly accessible through the binaries alone.

2. **JAR Files**:
   - JAR files are Java archive files that may contain compiled Java classes, resources, and metadata. If the Smart Client application is a Java-based application distributed as JAR files, you can use these files to run the application.
   - However, GUI testing tools usually interact with the application's user interface through automation APIs provided by the testing tool or the application itself.

To conduct GUI testing effectively, you typically need the following:

- **Access to the Application**: The ability to launch the Smart Client application for testing.
- **Automation Tool**: A GUI testing tool like Ranorex, TestComplete, or Squish that can interact with the application's UI elements.
- **Object Recognition**: The ability of the automation tool to recognize and interact with the UI elements within the Smart Client application.

In summary, while having access to the Smart Client binaries or JAR files is necessary for running the application, additional tools and frameworks are needed for GUI testing automation to interact with and test the application's user interface effectively.