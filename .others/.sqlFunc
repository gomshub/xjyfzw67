
#prod object exists

In Oracle, you can write a SQL function to check if an object (like a table, view, sequence, etc.) exists in the database using the USER_OBJECTS or ALL_OBJECTS data dictionary views.

Here’s an example function to check for an object’s existence:

Function Definition

CREATE OR REPLACE FUNCTION object_exists (
    object_name IN VARCHAR2,
    object_type IN VARCHAR2
) RETURN VARCHAR2 IS
    v_count NUMBER;
BEGIN
    SELECT COUNT(*)
    INTO v_count
    FROM USER_OBJECTS
    WHERE OBJECT_NAME = UPPER(object_name)
      AND OBJECT_TYPE = UPPER(object_type);

    IF v_count > 0 THEN
        RETURN 'EXISTS';
    ELSE
        RETURN 'NOT EXISTS';
    END IF;
END;
/

Parameters
	•	object_name: The name of the object (case-insensitive).
	•	object_type: The type of the object (e.g., TABLE, VIEW, SEQUENCE).

Usage

-- Check if a table named 'EMPLOYEES' exists
SELECT object_exists('EMPLOYEES', 'TABLE') AS result FROM dual;

-- Check if a sequence named 'EMP_SEQ' exists
SELECT object_exists('EMP_SEQ', 'SEQUENCE') AS result FROM dual;

Explanation
	1.	The function queries the USER_OBJECTS view to find objects owned by the current user.
	2.	It uses the UPPER function to ensure the check is case-insensitive.
	3.	If the object exists, it returns 'EXISTS'; otherwise, it returns 'NOT EXISTS'.

Alternative: For Other Schemas

To check in a specific schema or across all accessible schemas, use the ALL_OBJECTS or DBA_OBJECTS view instead of USER_OBJECTS:

FROM ALL_OBJECTS
WHERE OBJECT_NAME = UPPER(object_name)
  AND OBJECT_TYPE = UPPER(object_type)
  AND OWNER = UPPER(schema_name);

Let me know if you need help modifying this!