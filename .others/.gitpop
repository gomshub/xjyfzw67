git stash and git stash pop are great for temporarily saving your changes and then bringing them back when you’re ready. Here’s how they work:

⸻

Scenario: You’re working on something locally but need to switch branches or pull the latest changes without committing your work.

⸻

1. Stash your changes

git stash

This saves all modified and staged files and resets your working directory to the last commit.

Optional: Add a message

git stash push -m "WIP: fixing bug in login flow"



⸻

2. See your stashed list

git stash list



⸻

3. Apply and remove the latest stash

git stash pop

This applies the changes and removes them from the stash list.

⸻

4. If you just want to apply without deleting from stash

git stash apply



⸻

5. If you have multiple stashes

git stash pop stash@{1}   # Replace 1 with the stash number



⸻

6. Clean up after

git stash drop stash@{0}   # Drop a specific stash
git stash clear            # Drop all stashes

Let me know if you want a cheat sheet or a specific real-world scenario explained.