If you want to use Oracle Data Pump to synchronize the entire database daily by exporting only the changes, follow these steps to ensure efficient incremental updates across all tables.

Steps for Full Database Synchronization Using Oracle Data Pump

1. Initial Full Export

Perform a full export of the database to create a baseline dump file. This will be your starting point for future incremental exports.

Command for Full Export:

expdp user/password DIRECTORY=dp_dir DUMPFILE=full_export_%U.dmp LOGFILE=full_export.log FULL=Y

	•	DIRECTORY: Points to a valid directory object in Oracle (use CREATE DIRECTORY to set this up).
	•	DUMPFILE: Specifies the file(s) to store the exported data.
	•	FULL=Y: Exports the entire database.

2. Enable Incremental Export

To allow incremental updates, you need to use Oracle’s Transportable Tablespaces or the INCREMENTAL feature introduced in Oracle 12c for Data Pump.

Prerequisite: Enable Block Change Tracking

Block change tracking ensures that Oracle can identify which data blocks have changed. This improves the efficiency of incremental exports.
	1.	Enable Block Change Tracking:

ALTER DATABASE ENABLE BLOCK CHANGE TRACKING USING FILE '/path/to/change_tracking_file';


	2.	Perform Incremental Backups (Optional):
If you’re working with backups, ensure they’re incremental to match your export process.

3. Schedule Incremental Exports

After the full export, you can export only the changed data blocks.

Command for Incremental Export:

expdp user/password DIRECTORY=dp_dir DUMPFILE=incremental_export_%U.dmp LOGFILE=incremental_export.log INCREMENTAL=Y FULL=Y VERSION=LATEST

	•	INCREMENTAL=Y: Ensures only changed blocks since the last export are captured.
	•	FULL=Y: Includes all objects in the export.

For Specific Tables:

If needed, limit the export to specific tables:

expdp user/password DIRECTORY=dp_dir DUMPFILE=table_incremental_%U.dmp LOGFILE=table_incremental.log INCREMENTAL=Y TABLES=table1,table2 VERSION=LATEST

4. Import Data into Target Database

On the target database, import the data dump to apply the changes.

Command for Import:

impdp user/password DIRECTORY=dp_dir DUMPFILE=incremental_export_%U.dmp LOGFILE=incremental_import.log FULL=Y

	•	FULL=Y: Ensures all objects (schemas, tables, indexes, etc.) are imported.

5. Automate the Process

Automate the export/import process using a scheduler like cron or Oracle’s DBMS_SCHEDULER.

Example: Export Script (daily_export.sh):

#!/bin/bash
ORACLE_HOME=/path/to/oracle
export ORACLE_HOME
export PATH=$ORACLE_HOME/bin:$PATH

expdp user/password DIRECTORY=dp_dir DUMPFILE=daily_export_%U.dmp LOGFILE=daily_export.log INCREMENTAL=Y FULL=Y

Schedule with Cron:

0 2 * * * /path/to/daily_export.sh

Example: Import Script (daily_import.sh):

#!/bin/bash
ORACLE_HOME=/path/to/oracle
export ORACLE_HOME
export PATH=$ORACLE_HOME/bin:$PATH

impdp user/password DIRECTORY=dp_dir DUMPFILE=daily_export_%U.dmp LOGFILE=daily_import.log FULL=Y

6. Verify and Monitor
	•	Check the Data Pump logs (.log files) to ensure successful export/import.
	•	Monitor the size of the incremental exports to verify that only the changed data is being exported.

Tips for Optimization
	1.	Use Parallelism:
Increase the number of parallel workers to speed up the export/import process:

expdp user/password DIRECTORY=dp_dir DUMPFILE=incremental_export_%U.dmp LOGFILE=incremental_export.log PARALLEL=4 FULL=Y INCREMENTAL=Y


	2.	Use Compression:
Reduce dump file sizes with compression:

expdp user/password DIRECTORY=dp_dir DUMPFILE=incremental_export_%U.dmp LOGFILE=incremental_export.log COMPRESSION=ALL FULL=Y INCREMENTAL=Y

Summary
	•	Initial Full Export creates a baseline.
	•	Daily Incremental Export captures only changes since the last export using INCREMENTAL=Y.
	•	Import Daily Changes to the target using impdp.
	•	Automate the process with scripts and a scheduler.

This approach ensures efficient, daily synchronization of the database while avoiding the overhead of exporting the entire database repeatedly.