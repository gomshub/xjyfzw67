To ensure live logging in Bamboo, modify the script to stream logs in real-time using tee and avoid buffering issues. Here‚Äôs the updated script:

‚∏ª

Key Enhancements

‚úÖ Live logs in Bamboo (tee and stdbuf -oL)
‚úÖ Error handling (set -e to exit on failure)
‚úÖ Works with Bamboo‚Äôs build logs (no buffering delays)

‚∏ª

Updated Shell Script

#!/bin/bash

# Enable immediate exit on error
set -e

# Variables
SRC_DOCKER_REPO="source-docker-repo-url"
DST_DOCKER_REPO="destination-docker-repo-url"
SRC_HELM_REPO="source-helm-repo-url"
DST_HELM_REPO="destination-helm-repo-url"
IMAGE_NAME="your-image"
IMAGE_TAG="latest"
HELM_CHART_NAME="your-chart"
HELM_VERSION="1.0.0"
USERNAME="your-username"
TOKEN="your-token"
LOG_FILE="script.log"

# Function to log messages live
log() {
    echo -e "$1" | tee -a "$LOG_FILE"
}

# Function to check the last command status
check_status() {
    if [ $? -ne 0 ]; then
        log "‚ùå ERROR: $1 failed. Exiting."
        exit 1
    fi
}

# Start logging
log "üöÄ Starting script at $(date)..."

# List available Docker images before pulling
log "üìú Listing existing Docker images..."
docker images | tee -a "$LOG_FILE"

# Check for flags
if [[ "$1" == "--pull" ]]; then
    log "üîΩ Pulling Docker image..."

    # Docker login to source repo
    echo "$TOKEN" | docker login "$SRC_DOCKER_REPO" -u "$USERNAME" --password-stdin
    check_status "Docker login to source"

    # Pull Docker image (live logging with stdbuf)
    stdbuf -oL docker pull "$SRC_DOCKER_REPO/$IMAGE_NAME:$IMAGE_TAG" | tee -a "$LOG_FILE"
    check_status "Docker pull"

    log "‚úÖ Docker image pulled successfully!"
fi

if [[ "$1" == "--push" ]]; then
    log "üöÄ Pushing Docker image..."

    # Docker login to destination repo
    echo "$TOKEN" | docker login "$DST_DOCKER_REPO" -u "$USERNAME" --password-stdin
    check_status "Docker login to destination"

    # Tag and Push Docker Image
    docker tag "$SRC_DOCKER_REPO/$IMAGE_NAME:$IMAGE_TAG" "$DST_DOCKER_REPO/$IMAGE_NAME:$IMAGE_TAG"
    check_status "Docker tag"

    stdbuf -oL docker push "$DST_DOCKER_REPO/$IMAGE_NAME:$IMAGE_TAG" | tee -a "$LOG_FILE"
    check_status "Docker push"

    log "‚úÖ Docker image pushed successfully!"
fi

# Helm Chart Pull & Push
if [[ "$1" == "--pull" ]]; then
    log "üîΩ Pulling Helm Chart..."

    helm repo add source-repo "$SRC_HELM_REPO" --username "$USERNAME" --password "$TOKEN"
    check_status "Helm repo add source"

    stdbuf -oL helm pull source-repo/"$HELM_CHART_NAME" --version "$HELM_VERSION" | tee -a "$LOG_FILE"
    check_status "Helm chart pull"

    log "‚úÖ Helm chart pulled successfully!"
fi

if [[ "$1" == "--push" ]]; then
    log "üöÄ Pushing Helm Chart..."

    helm repo add destination-repo "$DST_HELM_REPO" --username "$USERNAME" --password "$TOKEN"
    check_status "Helm repo add destination"

    stdbuf -oL helm push "$HELM_CHART_NAME-$HELM_VERSION.tgz" destination-repo | tee -a "$LOG_FILE"
    check_status "Helm chart push"

    rm -f "$HELM_CHART_NAME-$HELM_VERSION.tgz"

    log "‚úÖ Helm chart pushed successfully!"
fi

log "üéâ Process Completed Successfully!"



‚∏ª

Why This Works in Bamboo
	1.	tee ensures live logs ‚Äì Bamboo captures real-time output.
	2.	stdbuf -oL removes buffering ‚Äì Docker & Helm logs appear immediately.
	3.	set -e exits on failure ‚Äì Bamboo will mark the step as failed if anything goes wrong.
	4.	check_status after each command ‚Äì Ensures reliability.

‚∏ª

Usage in Bamboo Script Task

Add the following script task in Bamboo:

chmod +x script.sh
./script.sh --pull  # For pulling images/charts
./script.sh --push  # For pushing images/charts

This will ensure that the logs appear in real-time in Bamboo‚Äôs build console. üöÄ