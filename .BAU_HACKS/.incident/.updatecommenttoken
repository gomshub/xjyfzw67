To make the service prompt for an API token when the user chooses “Yes” to update the update_comment field, we can enhance the implementation by adding an input modal that asks the user for the API token. Here’s how you can modify the service:

Updated HTML Template (interactive_results.html)

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Interactive JIRA Comments</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f7f7f7;
            color: #333;
        }
        header {
            background-color: #003366;
            color: white;
            padding: 20px;
            text-align: center;
        }
        h1 {
            margin: 0;
        }
        table {
            width: 90%;
            margin: 20px auto;
            border-collapse: collapse;
            text-align: center;
        }
        th, td {
            border: 1px solid #ddd;
            padding: 10px;
        }
        th {
            background-color: #003366;
            color: white;
        }
        tr:nth-child(even) {
            background-color: #f2f2f2;
        }
        .action-btn {
            padding: 6px 12px;
            margin: 4px;
            border: none;
            color: white;
            background-color: #007bff;
            cursor: pointer;
        }
        .action-btn:hover {
            background-color: #0056b3;
        }
        #modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 1000;
        }
        #modal-content {
            background-color: white;
            width: 400px;
            margin: 15% auto;
            padding: 20px;
            border-radius: 10px;
            text-align: center;
        }
        #modal-content input {
            width: 80%;
            padding: 10px;
            margin-bottom: 20px;
        }
        #modal-content button {
            padding: 10px 20px;
            background-color: #007bff;
            color: white;
            border: none;
            cursor: pointer;
        }
        #modal-content button:hover {
            background-color: #0056b3;
        }
    </style>
</head>
<body>
    <header>
        <h1>Interactive JIRA Update Comments</h1>
    </header>
    <table>
        <thead>
            <tr>
                <th>JIRA Number</th>
                <th>Job Number</th>
                <th>Update Comment</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            {% for issue in issues %}
            <tr>
                <td>
                    <a href="https://jira.example.com/browse/{{ issue['jira_number'] }}" target="_blank">
                        {{ issue['jira_number'] }}
                    </a>
                </td>
                <td>{{ issue['job_number'] }}</td>
                <td>{{ issue['update_comment'] }}</td>
                <td>
                    <button class="action-btn" onclick="openModal('{{ issue['jira_number'] }}')">Yes</button>
                    <button class="action-btn" onclick="handleNo('{{ issue['jira_number'] }}')">No</button>
                </td>
            </tr>
            {% endfor %}
        </tbody>
    </table>

    <div id="modal">
        <div id="modal-content">
            <h2>Provide API Token</h2>
            <input type="text" id="api-token" placeholder="Enter your API token">
            <button onclick="submitYes()">Submit</button>
            <button onclick="closeModal()">Cancel</button>
        </div>
    </div>

    <script>
        let currentJiraNumber = null;

        function openModal(jiraNumber) {
            currentJiraNumber = jiraNumber;
            document.getElementById("modal").style.display = "block";
        }

        function closeModal() {
            currentJiraNumber = null;
            document.getElementById("modal").style.display = "none";
        }

        function submitYes() {
            const apiToken = document.getElementById("api-token").value;
            if (!apiToken) {
                alert("Please enter an API token.");
                return;
            }

            fetch('/update_comment', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ jira_number: currentJiraNumber, action: 'yes', api_token: apiToken }),
            })
            .then(response => response.json())
            .then(data => {
                alert(data.message);
                location.reload();
            })
            .catch(err => console.error(err));
        }

        function handleNo(jiraNumber) {
            fetch('/update_comment', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ jira_number: jiraNumber, action: 'no' }),
            })
            .then(response => response.json())
            .then(data => {
                alert(data.message);
                location.reload();
            })
            .catch(err => console.error(err));
        }
    </script>
</body>
</html>

Routes Update (routes.py)

Update the /update_comment route to handle the API token provided via the modal.

@app.route('/update_comment', methods=['POST'])
def update_comment():
    """
    Handle the action to update a comment for a JIRA issue with an API token.
    """
    data = request.json
    jira_number = data.get("jira_number")
    action = data.get("action")
    api_token = data.get("api_token")

    if action == "yes" and api_token:
        # Call API to update comment
        success = update_comment_api(jira_number, api_token)
        if success:
            mark_comment_updated(jira_number)
            return jsonify({"message": f"Comment updated for JIRA: {jira_number}"})
        else:
            return jsonify({"message": f"Failed to update comment for JIRA: {jira_number}"}), 500
    elif action == "no":
        return jsonify({"message": f"No action taken for JIRA: {jira_number}"})
    else:
        return jsonify({"message": "Invalid action or missing API token"}), 400

def update_comment_api(jira_number, api_token):
    """
    Call JIRA API to update a comment for a given JIRA issue.
    """
    url = f"https://jira.example.com/rest/api/2/issue/{jira_number}/comment"
    headers = {"Authorization": f"Bearer {api_token}", "Content-Type": "application/json"}
    payload = {"body": "This comment has been updated via the interactive service."}

    response = requests.post(url, headers=headers, json=payload)
    return response.status_code == 201

Workflow
	1.	When “Yes” is clicked:
	•	Opens a modal asking for the API token.
	•	Sends the API token and jira_number to the /update_comment endpoint.
	2.	When “No” is clicked:
	•	Directly sends a “No action” request to /update_comment.
	3.	API Integration:
	•	Uses the provided API token to authenticate and update the JIRA comment via the JIRA REST API.