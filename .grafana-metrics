Yes, Grafana can be set up without Prometheus to visualize metrics from various other data sources. Grafana supports a wide range of data sources including but not limited to MySQL, PostgreSQL, InfluxDB, Elasticsearch, Graphite, Cloudwatch, and many more. Here's a guide to setting up Grafana with a few popular alternatives:

### Step 1: Install Grafana

#### Prerequisites
- Linux-based server (Ubuntu/Debian/CentOS) to host Grafana

#### Installation Steps

1. **For Ubuntu/Debian**:
   ```bash
   sudo apt-get update
   sudo apt-get install -y software-properties-common
   sudo add-apt-repository "deb https://packages.grafana.com/oss/deb stable main"
   sudo apt-get install -y apt-transport-https
   sudo apt-get update
   sudo apt-get install -y grafana
   ```

2. **For CentOS/RHEL**:
   ```bash
   sudo yum install -y https://packages.grafana.com/oss/rpm/grafana-8.5.2-1.x86_64.rpm
   ```

3. **Start and Enable Grafana Service**:
   ```bash
   sudo systemctl start grafana-server
   sudo systemctl enable grafana-server
   ```

### Step 2: Configure Grafana

#### Step 2.1: Access Grafana Web Interface

1. **Open a web browser** and go to `http://<your_server_ip>:3000`.
2. **Log in with default credentials**:
   - Username: `admin`
   - Password: `admin`
3. **Change the default password** when prompted.

### Step 3: Add a Data Source

Depending on your chosen data source, the setup will vary. Here are steps for a few common data sources:

#### Option A: InfluxDB

1. **Install InfluxDB**:
   ```bash
   sudo apt-get update
   sudo apt-get install -y influxdb
   sudo systemctl start influxdb
   sudo systemctl enable influxdb
   ```

2. **Configure InfluxDB**:
   - Create a database and a user for Grafana:
     ```bash
     influx
     CREATE DATABASE grafana_db
     CREATE USER grafana_user WITH PASSWORD 'password'
     GRANT ALL ON grafana_db TO grafana_user
     ```

3. **Add InfluxDB as a Data Source in Grafana**:
   - Navigate to **Configuration -> Data Sources**.
   - Click **Add data source**.
   - Select **InfluxDB**.
   - Configure the data source:
     - **URL**: `http://<influxdb_server_ip>:8086`
     - **Database**: `grafana_db`
     - **User**: `grafana_user`
     - **Password**: `password`
   - Click **Save & Test**.

#### Option B: MySQL

1. **Install MySQL**:
   ```bash
   sudo apt-get update
   sudo apt-get install -y mysql-server
   sudo systemctl start mysql
   sudo systemctl enable mysql
   ```

2. **Configure MySQL**:
   - Create a database and a user for Grafana:
     ```sql
     CREATE DATABASE grafana_db;
     CREATE USER 'grafana_user'@'%' IDENTIFIED BY 'password';
     GRANT ALL PRIVILEGES ON grafana_db.* TO 'grafana_user'@'%';
     FLUSH PRIVILEGES;
     ```

3. **Add MySQL as a Data Source in Grafana**:
   - Navigate to **Configuration -> Data Sources**.
   - Click **Add data source**.
   - Select **MySQL**.
   - Configure the data source:
     - **Host**: `<mysql_server_ip>:3306`
     - **Database**: `grafana_db`
     - **User**: `grafana_user`
     - **Password**: `password`
   - Click **Save & Test**.

#### Option C: Elasticsearch

1. **Install Elasticsearch**:
   ```bash
   wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.10.1-amd64.deb
   sudo dpkg -i elasticsearch-7.10.1-amd64.deb
   sudo systemctl start elasticsearch
   sudo systemctl enable elasticsearch
   ```

2. **Add Elasticsearch as a Data Source in Grafana**:
   - Navigate to **Configuration -> Data Sources**.
   - Click **Add data source**.
   - Select **Elasticsearch**.
   - Configure the data source:
     - **URL**: `http://<elasticsearch_server_ip>:9200`
     - **Index name**: The index pattern (e.g., `metrics-*`)
     - **Time field name**: The field that contains the timestamp (e.g., `@timestamp`)
   - Click **Save & Test**.

### Step 4: Create Dashboards and Panels

1. **Create a new dashboard**:
   - Navigate to **Dashboards -> New Dashboard**.
   - Click **Add new panel**.
   - Select metrics from your data source.
   - Configure the visualization options.
   - Click **Apply** to add the panel to the dashboard.
   - Save the dashboard by clicking the save icon and providing a name.

### Step 5: Secure Grafana (Optional)

1. **Enable HTTPS**:
   - Obtain an SSL certificate (e.g., from Let's Encrypt).
   - Configure Grafana to use HTTPS by editing `/etc/grafana/grafana.ini`:
     ```ini
     [server]
     protocol = https
     cert_file = /path/to/your/cert.pem
     cert_key = /path/to/your/key.pem
     ```

2. **Set up user authentication**:
   - Configure authentication providers in `/etc/grafana/grafana.ini` (e.g., OAuth, LDAP).

3. **Restrict user access**:
   - Create users and assign roles (Admin, Editor, Viewer) through the Grafana web interface under **Configuration -> Users**.

### Conclusion

By following these steps, you can set up Grafana to visualize metrics from various data sources other than Prometheus. This setup allows you to create rich dashboards and monitor your infrastructure effectively. Adjust configurations and settings as needed to suit your specific requirements and environment.